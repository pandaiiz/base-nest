datasource database {
  provider     = "postgresql"
  url          = env("PG_DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
  PENDING
  LIVE
  DELETED
  REMOVED
}

enum UserRole {
  MEMBER
  ADMIN

  @@map("userRole")
}

model Menu {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  parentId    Int?     @map("parent_id")
  name        String
  path        String?
  permission  String?
  type        Int?     @default(0)
  icon        String?
  sort        Int?     @default(0)
  component   String?
  isExt       Boolean  @default(false) @map("is_ext")
  extOpenMode Int      @default(1) @map("ext_open_mode")
  keepAlive   Int      @default(1) @map("keep_alive")
  show        Int      @default(1)
  activeMenu  String?  @map("active_menu")
  status      Int      @default(1)
  // 角色
  roles       Role[]   @relation("sys_menu_role")

  @@map("sys_menu")
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  // 角色名
  name      String   @unique @database.VarChar(50)
  // 角色标识
  value     String   @unique
  // 角色描述
  remark    String?
  // 状态：1启用，0禁用
  status    Int?     @default(1)
  // 是否默认用户
  default   Boolean? @default(false)
  // 菜单
  menus     Menu[]   @relation("sys_menu_role")
  // 用户
  users     User[]   @relation("sys_user_role")

  @@map("sys_role")
}

model Dept {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  // 部门名称
  name      String
  sort      Int?     @default(0)
  // 父ID
  parentId  Int?     @default(0)
  // 用户列表
  users     User[]

  @@map("sys_dept")
}

model LoginLog {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  // IP
  ip        String?
  // 地址
  address   String?
  // 登录方式
  provider  String?
  // 浏览器ua
  ua        String?  @database.VarChar(500)
  // 用户
  user      User?    @relation(fields: [userId], references: [id])
  // 用户ID
  userId    Int?     @map("user_id")

  @@index([userId])
  @@map("sys_login_log")
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  username     String        @unique
  password     String
  psalt        String        @database.VarChar(32)
  nickname     String?
  avatar       String?
  qq           String?
  email        String?
  phone        String?
  remark       String?
  status       Int?          @default(1)
  icon         String?
  sort         Int?          @default(0)
  path         String?
  component    String?
  dept         Dept?         @relation(fields: [deptId], references: [id])
  deptId       Int?          @map("dept_id")
  // 角色
  roles        Role[]        @relation("sys_user_role")
  // Token
  accessTokens AccessToken[]
  // LoginLogs
  loginLogs    LoginLog[]

  @@index([deptId])
  @@map("sys_user")
}

model RefreshToken {
  id            String      @id @default(uuid()) @database.Uuid
  createdAt     DateTime    @default(now()) @map("created_at")
  updatedAt     DateTime    @updatedAt @map("updated_at")
  value         String      @database.VarChar(500)
  // 令牌过期时间
  expiredAt     DateTime    @map("expired_at")
  // 刷新令牌
  accessToken   AccessToken @relation(fields: [accessTokenId], references: [id])
  // 刷新令牌ID
  accessTokenId String      @unique @map("access_token_id")

  @@map("user_refresh_tokens")
}

model AccessToken {
  id           String        @id @default(uuid()) @database.Uuid
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  value        String        @database.VarChar(500)
  // 令牌过期时间
  expiredAt    DateTime      @map("expired_at")
  // 用户
  user         User          @relation(fields: [userId], references: [id])
  // 用户ID
  userId       Int           @map("user_id")
  refreshToken RefreshToken?

  @@index([userId])
  @@map("user_access_tokens")
}
